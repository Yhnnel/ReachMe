{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '@/router';\nimport API from '../api';\nimport { ref } from 'vue';\nexport default {\n  setup() {\n    const users = ref(null);\n    const updatedUsers = ref(null);\n    const userData = ref(null);\n    const fname = ref(null);\n    const mname = ref(null);\n    const lname = ref(null);\n    const bday = ref(null);\n    const gender = ref(null);\n    const pnum = ref(null);\n    const email = ref(null);\n    const pass = ref(null);\n    const confpass = ref(null);\n\n    /*\r\n    const getUserData = async () => {\r\n        try{\r\n            let Fname = fname.value;\r\n            let Mname = mname.value;\r\n            let Lname = lname.value;\r\n            let Pass = pass.value;\r\n            let Bday = bday.value;\r\n            let Gender = gender.value;\r\n            let Email = email.value;\r\n            let Pnum = pnum.value; \r\n              let data = {\r\n                firstname: fname,\r\n                middlename: mname,\r\n                lastname: lname,\r\n                password: confpass,\r\n                birthday: bday,\r\n                gender: gender,\r\n                email: email,\r\n                phonenumber: pnum,\r\n            }\r\n            userData.value = await data;\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n            \r\n    }\r\n    getUserData()\r\n    */\n\n    const getAllUser = async () => {\n      try {\n        let data = await API.getAllUser();\n        users.value = await data;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getAllUser();\n    const submitSignUp = async () => {\n      console.log(users.value);\n      let Fname = fname.value;\n      let Mname = mname.value;\n      let Lname = lname.value;\n      let Pass = pass.value;\n      let Bday = bday.value;\n      let Gender = gender.value;\n      let Email = email.value;\n      let Pnum = pnum.value;\n      try {\n        let isEmailUsed = false;\n        let isPassMatched = false;\n        let userId = null;\n        for (let i = 0; i < users.value.length; i++) {\n          if (email !== undefined) {\n            if (users.value[i].email == email.value) {\n              console.log(\"email already in use\");\n              isEmailUsed = true;\n              break;\n            }\n          }\n        }\n        if (pass.value == confpass.value) {\n          isPassMatched = true;\n        } else {\n          console.log(\"password doesn't match\");\n        }\n        if (!isEmailUsed && isPassMatched) {\n          let data = {\n            firstname: Fname,\n            middlename: Mname,\n            lastname: Lname,\n            password: Pass,\n            birthday: Bday,\n            gender: Gender,\n            email: Email,\n            phonenumber: Pnum\n          };\n          userData.value = await data;\n          console.log(userData.value);\n          const res = await API.createUser(userData.value);\n          let updatedData = await API.getAllUser();\n          updatedUsers.value = await updatedData;\n          console.log(updatedUsers.value);\n          for (let i = 0; i < updatedUsers.value.length; i++) {\n            if (email !== undefined) {\n              if (updatedUsers.value[i].email == email.value) {\n                userId = updatedUsers.value[i]._id.toString();\n                break;\n              }\n            }\n          }\n          console.log(userId);\n          router.push({\n            name: \"Home\"\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    return {\n      fname,\n      mname,\n      lname,\n      bday,\n      gender,\n      pnum,\n      email,\n      pass,\n      confpass,\n      userData,\n      submitSignUp\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["router","API","ref","setup","users","updatedUsers","userData","fname","mname","lname","bday","gender","pnum","email","pass","confpass","getAllUser","data","value","err","console","log","submitSignUp","Fname","Mname","Lname","Pass","Bday","Gender","Email","Pnum","isEmailUsed","isPassMatched","userId","i","length","undefined","firstname","middlename","lastname","password","birthday","phonenumber","res","createUser","updatedData","_id","toString","push","name"],"sourceRoot":"","sources":["C:\\Users\\j.aninon\\Desktop\\YHNNEL\\MINI_FACEBOOK\\frontend\\src\\views\\SignUp.vue"],"sourcesContent":["<template>\r\n  <div class=\"signupdiv\">\r\n    <form enctype=\"application/x-www-form-urlencoded\" @submit.prevent=\"submitSignUp\">\r\n        <img class=\"signuplogo\" src=\"../assets/logo.png\" alt=\"logo.png\">\r\n        <input type=\"text\" placeholder=\"Firstname\" v-model=\"fname\" required><br>\r\n        <input type=\"text\" placeholder=\"Middlename\" v-model=\"mname\"><br>\r\n        <input type=\"text\" placeholder=\"Lastname\" v-model=\"lname\" required><br>\r\n        <input type=\"date\" placeholder=\"Birthday\" v-model=\"bday\" class=\"hasLabel\" required><br>\r\n        <select name=\"gender\" v-model=\"gender\" required>\r\n            <option value=\"none\" selected>-Select Gender-</option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"other\">other</option>\r\n        </select><br>\r\n        <input type=\"tel\" placeholder=\"Phone number\" v-model=\"pnum\"><br>\r\n        <input type=\"email\" placeholder=\"Email\" v-model=\"email\" required><br>\r\n        <input type=\"password\" placeholder=\"Password\" v-model=\"pass\" required><br>\r\n        <input type=\"password\" placeholder=\"Confirm password\" v-model=\"confpass\" required>\r\n        <button><b>Sign Up</b></button>\r\n        <p>Already have an account?</p>\r\n        <router-link to=\"/login\"><button><b>Log in</b></button></router-link> \r\n    </form>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport router from '@/router';\r\nimport API from '../api';\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n    setup() {\r\n        const users = ref(null)\r\n        const updatedUsers = ref(null)\r\n        const userData = ref(null)\r\n        const fname = ref(null)\r\n        const mname = ref(null)\r\n        const lname = ref(null)\r\n        const bday = ref(null)\r\n        const gender = ref(null)\r\n        const pnum = ref(null)\r\n        const email = ref(null)\r\n        const pass = ref(null)\r\n        const confpass = ref(null)\r\n\r\n        /*\r\n        const getUserData = async () => {\r\n            try{\r\n                let Fname = fname.value;\r\n                let Mname = mname.value;\r\n                let Lname = lname.value;\r\n                let Pass = pass.value;\r\n                let Bday = bday.value;\r\n                let Gender = gender.value;\r\n                let Email = email.value;\r\n                let Pnum = pnum.value; \r\n\r\n                let data = {\r\n                    firstname: fname,\r\n                    middlename: mname,\r\n                    lastname: lname,\r\n                    password: confpass,\r\n                    birthday: bday,\r\n                    gender: gender,\r\n                    email: email,\r\n                    phonenumber: pnum,\r\n                }\r\n                userData.value = await data;\r\n            }\r\n            catch(err){\r\n                console.log(err)\r\n            }\r\n                \r\n        }\r\n        getUserData()\r\n        */\r\n\r\n        const getAllUser = async () => {\r\n            try{\r\n                let data = await API.getAllUser();\r\n                users.value = await data;\r\n            }\r\n            catch(err){\r\n                console.log(err)\r\n            }\r\n                \r\n        }\r\n        getAllUser()    \r\n        const submitSignUp = async () => {\r\n            console.log(users.value)\r\n            let Fname = fname.value;\r\n            let Mname = mname.value;\r\n            let Lname = lname.value;\r\n            let Pass = pass.value;\r\n            let Bday = bday.value;\r\n            let Gender = gender.value;\r\n            let Email = email.value;\r\n            let Pnum = pnum.value;  \r\n            try{\r\n                let isEmailUsed = false;\r\n                let isPassMatched = false;\r\n                let userId = null;\r\n\r\n                for(let i=0; i<users.value.length; i++){\r\n                    if(email !== undefined){\r\n                        if(users.value[i].email == email.value){\r\n                            console.log(\"email already in use\");\r\n                            isEmailUsed = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if(pass.value == confpass.value){\r\n                    isPassMatched = true;\r\n                }\r\n                else{\r\n                    console.log(\"password doesn't match\")\r\n                }\r\n                if(!isEmailUsed && isPassMatched){\r\n                    let data = {\r\n                        firstname: Fname,\r\n                        middlename: Mname,\r\n                        lastname: Lname,\r\n                        password: Pass,\r\n                        birthday: Bday,\r\n                        gender: Gender,\r\n                        email: Email,\r\n                        phonenumber: Pnum,\r\n                    }\r\n                    userData.value = await data;\r\n                    console.log(userData.value)\r\n                    const res = await API.createUser(userData.value)\r\n                    let updatedData = await API.getAllUser();\r\n                    updatedUsers.value = await updatedData;\r\n                    console.log(updatedUsers.value)\r\n                    for(let i=0; i<updatedUsers.value.length; i++){\r\n                        if(email !== undefined){\r\n                            if(updatedUsers.value[i].email == email.value){\r\n                                userId = updatedUsers.value[i]._id.toString();\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    console.log(userId);\r\n                    router.push({name: \"Home\"}); \r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n\r\n        return { fname, mname, lname, bday, gender, pnum, email, pass, confpass, userData, submitSignUp };        \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .signupdiv {\r\n        max-width: 600px;\r\n        height: 900px;\r\n        margin: 20px auto;\r\n        background: rgb(80, 112, 80);\r\n        border-radius: 10px;\r\n    }\r\n\r\n    form {\r\n        max-width: 400px;\r\n        max-height: 750px;\r\n        margin: 30px auto;\r\n        text-align: center;\r\n        background: rgb(167, 238, 167);\r\n        padding: 40px;\r\n        border-radius: 10px;\r\n        display: inline-block;\r\n        box-shadow: 5px 10px #888888;\r\n    }\r\n\r\n    select {\r\n        font-size: 15px;\r\n        width: 370px;\r\n        padding: 10px;\r\n        margin: 10px auto;\r\n        padding-right: 50px;\r\n        border-radius: 10px;\r\n        color: rgb(75, 75, 75);\r\n        border-style: none;\r\n        border-color: aquamarine;\r\n    }\r\n\r\n    input {\r\n        font-size: 15px;\r\n        width: 350px;\r\n        padding: 10px;\r\n        margin: 10px auto;\r\n        border-radius: 10px;\r\n        color: rgb(75, 75, 75);\r\n        border-style: none;\r\n        border-color: aquamarine;\r\n    }\r\n\r\n    button {\r\n        width: 100px;\r\n        color: #ffffffe1;\r\n        font-size: 15px;\r\n        padding: 10px;\r\n        margin-top: 20px;\r\n        border-style: none;\r\n        background: grey;\r\n        border-color: aquamarine;\r\n        border-radius: 20px;\r\n    }\r\n    p {\r\n        color:#686868e1;\r\n        margin-bottom: -10px;\r\n        padding-bottom: -10px;\r\n        font-size: 15px;\r\n    }\r\n\r\n    .signuplogo {\r\n        width: 200px;\r\n        margin: 10px auto;\r\n        border-radius: 10px;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}